@implements IDisposable
@using MudBlazor


@inject NavigationManager NavigationManager



<nav class="nav-main">
    <div class="logo-holder">
        <a class="" href=""><img src="logosmall.png"/></a>
    </div>
    <div>
        <a class="nav-home-text" href="">GrowthPath</a>
    </div>
    <div class="login-register-nav-buttons">
        <AuthorizeView>
            <Authorized>
                <div class="nav-buttons-authorized">
                    <div class="nav-item">
                        <NavLink class="nav-link" href="Account/Manage">
                            <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                        </NavLink>
                    </div>
                    <div class="nav-item">
                        <form action="Account/Logout" method="post">
                            <AntiforgeryToken />
                            <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                            <button type="submit" class="nav-link">
                                <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Uitloggen
                            </button>
                        </form>
                    </div>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-buttons-not-authorized">
                    <div class="nav-item">
                        <NavLink class="nav-link" href="Account/Register">Registreren</NavLink>
                    </div>
                    <div class="nav-item">
                        <NavLink class="nav-link" href="Account/Login">Inloggen</NavLink>
                    </div>
                    <div class="nav-item avatar-placeholder">
                        <img class="empty-avatar-placeholder" src="empty-img-cover.jpg"/>
                    </div>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </div>
</nav>
@* 
<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="weather">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="auth">
                <span class="bi bi-lock-nav-menu" aria-hidden="true"></span> Auth Required
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="learning-tools">
                <span class="bi bi-capsule-nav-menu" aria-hidden="true"></span> Learning Tools
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="competences">
                <span class="bi bi-capsule-nav-menu" aria-hidden="true"></span> Competences
            </NavLink>
        </div>
    </nav>
</div> *@

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

