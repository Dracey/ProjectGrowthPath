@page "/profile/setup"
@using ProjectGrowthPath.Application.Service
@using ProjectGrowthPath.UserInterface.Components.Layout

@inject FirstTimeSetupService SetupService
@inject NavigationManager Navigation

@layout LoginAndRegister
@rendermode InteractiveServer

<PageTitle>Profile Set-up</PageTitle>
<div>

</div>


<SetupLayout>
    @if (stepIndex == 0)
    {
        <NameStep OnNext="NextStep"/>
    }
    else if (stepIndex == 1)
    {
        <InterestStep OnNext="NextStep" OnBack="PreviousStep" />
    }
    else if (stepIndex == 2)
    {
        <SkillStep OnNext="NextStep" OnBack="PreviousStep" />
    }
    else if (stepIndex == 3)
    {
        <LearningToolStep OnNext="NextStep" OnBack="PreviousStep" />
    }
    else if (stepIndex == 4)
    {
        <FinalizeStep OnFinish="FinishSetup" OnBack="PreviousStep" />
    }
</SetupLayout>

@code {
    private int stepIndex = 0;

    private void NextStep() => stepIndex++;
    private void PreviousStep() => stepIndex--;

    private async Task FinishSetup()
    {
        await SetupService.FinalizeSetupAsync();
        Navigation.NavigateTo("/dashboard");
    }
}

@* <EditForm Model="model" OnValidSubmit="HandleSubmit" FormName="AddName">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputText @bind-Value="model.Name" placeholder="Voer je naam in" />
    <button type="submit">Profiel aanmaken</button>
</EditForm>

@code {
    private NameModel model = new();


    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var userId = authState.User.FindFirst(c => c.Type == ClaimTypes.NameIdentifier)?.Value;

        if (!string.IsNullOrEmpty(userId))
        {
            SetupService.StartSetup(Guid.Parse(userId)); // of sla het op in SetupStateStore
        }

        // Optioneel: herladen bij refresh?
        model.Name = SetupService.CurrentState?.NewUser?.Name ?? "";
    }

    private async Task HandleSubmit()
    {
        SetupService.UpdateName(model.Name);

        // Navigeren naar volgende stap in wizard, bijv. Competenties kiezen
        Navigation.NavigateTo("/profile/setup/interests");
    }

    private class NameModel
    {
        [System.ComponentModel.DataAnnotations.Required]
        public string Name { get; set; }
    } *@
