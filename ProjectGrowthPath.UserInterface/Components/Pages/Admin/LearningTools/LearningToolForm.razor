@using ProjectGrowthPath.Application.DTOs.LearningTools
@using ProjectGrowthPath.Application.Service
@using ProjectGrowthPath.Domain.Entities
@inject LearningToolsService LearningToolsService

<EditForm Model=@learningTool OnSubmit=@FormSubmitted>
    <div class="form-group row">
        <label for="name" class="col-sm-2 col-form-label">
            Name
        </label>
        <div class="col-sm-10">
            <InputText id="name" class="form-control" @bind-Value="learningTool.Name" />
        </div>
    </div>
    
    <div class="form-group row">
        <label for="description" class="col-sm-2 col-form-label">
            Description
        </label>
        <div class="col-sm-10">
            <InputText id="description" class="form-control" @bind-Value="learningTool.Description" />
        </div>
    </div>

    <div class="form-group row">
        <label for="link" class="col-sm-2 col-form-label">
            Link
        </label>
        <div class="col-sm-10">
            <InputText id="link" class="form-control" @bind-Value="learningTool.Link" />
        </div>
    </div>

    <div class="form-group row">
        <label for="difficulty" class="col-sm-2 col-form-label">
            Difficulty
        </label>
        <div class="col-sm-10">
            <InputSelect id="category" class="form-control" @bind-Value="learningTool.Difficulty">
                @foreach (var difficulty in Enum.GetValues(typeof(DifficultyTool)))
                {
                    <option value="@difficulty">@difficulty</option>
                }
            </InputSelect>
        </div>
    </div>

    <div class="form-group row">
        <label for="category" class="col-sm-2 col-form-label">
            Category
        </label>
        <div class="col-sm-10">
            <InputSelect id="category" class="form-control" @bind-Value="learningTool.Category">
                @foreach (var category in Enum.GetValues(typeof(CategoryTool)))
                {
                    <option value="@category">@category</option>
                }
            </InputSelect>
        </div>
    </div>

    <div class="form-group row">
        <label for="duration" class="col-sm-2 col-form-label">
            Duration
        </label>
        <div class="col-sm-10">
            <InputNumber id="duration" class="form-control" @bind-Value="learningTool.Duration" />
        </div>
    </div>

    <div class="form-group row">
        <label for="provider" class="col-sm-2 col-form-label">
            Provider
        </label>
        <div class="col-sm-10">
            <InputText id="provider" class="form-control" @bind-Value="learningTool.Provider" />
        </div>
    </div>

    <button class="btn btn-secondary" @onclick="OnCancel">Cancel</button>
    <input type="submit" value="Submit" class="btn btn-primary" />
</EditForm>

@code {
    [Parameter]
    public EventCallback OnSave { get; set; }
    [Parameter]
    public EventCallback OnCancel { get; set; }

    LearningToolCreateDto learningTool = new LearningToolCreateDto();

    public async Task FormSubmitted()
    {
        var stuff = await LearningToolsService.Add(learningTool);
    }
}
