@using ProjectGrowthPath.Application.DTOs
@using ProjectGrowthPath.Application.DTOs.Competences
@using ProjectGrowthPath.Application.Service
@using ProjectGrowthPath.Application.Service.Enums
@inject CompetenceService CompetenceService

<EditForm Model=@competence OnSubmit=@FormSubmitted>
    <div class="form-group row">
        <label for="name" class="col-sm-2 col-form-label">
            Name
        </label>
        <div class="col-sm-10">
            <InputText id="name" class="form-control" @bind-Value="competence.Name" />
        </div>
    </div>

    <div class="form-group row">
        <label for="description" class="col-sm-2 col-form-label">
            Description
        </label>
        <div class="col-sm-10">
            <InputText id="description" class="form-control" @bind-Value="competence.Description" />
        </div>
    </div>

    <div class="form-group row">
        <label for="category" class="col-sm-2 col-form-label">
            Category
        </label>
        <div class="col-sm-10">
            <InputSelect id="category" class="form-control" @bind-Value="competence.Category">
                @foreach (var category in CompetenceCategories)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            </InputSelect>
        </div>
    </div>

    <button class="btn btn-secondary" @onclick="ToggleForm">Cancel</button>
    <input type="submit" value="Submit" class="btn btn-primary" />
</EditForm>

@code {
    [Parameter]
    public EventCallback ToggleForm { get; set; }

    [Parameter]
    public EventCallback OnSave { get; set; }

    CompetenceCreateDto competence = new CompetenceCreateDto();

    List<EnumDto> CompetenceCategories => CompetenceCategoryService.GetEnumList();

    public async Task FormSubmitted()
    {
        await CompetenceService.Add(competence);
        await OnSave.InvokeAsync();
    }

}
